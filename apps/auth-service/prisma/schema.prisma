generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(cuid())
  tenantId  String?  // Nullable for platform admins
  email      String
  username   String?
  password   String
  role       UserRole @default(STUDENT)
  isVerified Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // Relations
  otps          OTP[]
  refreshTokens RefreshToken[]

  // Constraints
  @@unique([tenantId, email]) // Tenant-scoped uniqueness
  @@unique([tenantId, username]) // Tenant-scoped uniqueness
  @@map("users")
}

enum UserRole {
  STUDENT
  TEACHER
  FINANCE
  PRINCIPAL
  ADMIN
}

model OTP {
  id         String   @id @default(cuid())
  tenantId  String?  // Nullable for platform
  email      String
  otp        String
  expiresAt  DateTime
  isUsed     Boolean  @default(false)
  createdAt  DateTime @default(now())

  // Relations
  user   User?   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String?

  @@map("otps")
}

model RefreshToken {
  id         String   @id @default(cuid())
  tenantId  String?  // Nullable for platform
  token      String   @unique
  expiresAt  DateTime
  createdAt  DateTime @default(now())

  // Relations
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String

  @@map("refresh_tokens")
}

